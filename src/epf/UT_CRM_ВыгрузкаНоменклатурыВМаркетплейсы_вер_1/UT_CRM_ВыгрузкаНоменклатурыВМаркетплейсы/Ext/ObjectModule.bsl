
#Область ПодключениеОбработкиКБСП

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();

	ПараметрыРегистрации.Вставить("Вид",ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка());
	ПараметрыРегистрации.Вставить("Версия","1.1");
	//ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование","Импорт из 1С:УТ");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация","Импорт из 1С:УТ");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "3.1.7.275"); // ОБЯЗАТЕЛЬНО!!! //(https://forum.infostart.ru/forum9/topic179193/)
	//ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, "Открыть форму : UT_CRM_ВыгрузкаНоменклатурыВМаркетплейсы","ВыполнитьЭкспорт",ТипКоманды, Ложь) ;
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, "Экспорт доступных остатков","ВыполнитьЭкспорт",ТипКоманды, Ложь) ;
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, "Отправка данный на сайт","ВыгрузитьВМаркетплейсы",ТипКоманды, Ложь) ;

	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	//ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	//ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
//           ** Использование - Строка - тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//               В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.

	НоваяКоманда = ТаблицаКоманд.Добавить() ;
	НоваяКоманда.Представление = Представление ;
	НоваяКоманда.Идентификатор = Идентификатор ;
	НоваяКоманда.Использование = Использование ;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение ;
	НоваяКоманда.Модификатор = Модификатор ;
КонецПроцедуры

// Интерфейс для запуска логики обработки.
Процедура ВыполнитьКоманду(ИмяКоманды, ПараметрыВыполнения) Экспорт
	
	Если ИмяКоманды = "ВыполнитьЭкспорт" Тогда
		ВыполнитьЭкспорт();
		
	ИначеЕсли ИмяКоманды = "ВыгрузитьВМаркетплейсы" Тогда
		ВыгрузитьВМаркетплейсы();

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ВыполнитьЭкспорт


// Подготовка данных по свободным остаткам для экспорта


// Выполняет полный экспорт на текущий момент
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура ВыполнитьЭкспорт() Экспорт
	
	ТЗМаркетплейсов = ТЗМаркетплейсов();
	
	ТекДата = НачалоДня(ТекущаяДатаСеанса());
	
	Для каждого МаркетПлейс Из ТЗМаркетплейсов.ВыгрузитьКолонку("Ссылка") Цикл
		
		Если НЕ ЕстьДанныеДляВыгрузкиЗаСегодня(ТекДата, МаркетПлейс) Тогда
			// Это первая выгрузка. Она должна быть полной
			ОчиститьРегистр(МаркетПлейс);
			Выборка = ПолучитьВыборкуСвободныхОстатков();
			ПоместитьПервуюВыгрузкуЗаДеньВРегистрСведений(Выборка, ТекДата, МаркетПлейс);
		Иначе 
			// Это вторая и последующие выгрузки. Это - дифф выгрузки
			Выборка = ПолучитьВыборкуСвободныхОстатковСУчетомИзменений(ТекДата, Маркетплейс);
			ПоместитьДифференциальнуюВыгрузкуЗаДеньВРегистрСведений(Выборка, ТекДата, МаркетПлейс);
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры


// Формирует выборку только по типовым регистрам
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ПолучитьВыборкуСвободныхОстатков() Экспорт
	
	ТЗ = ТЗДоступныхЗаглушка();    //для тестирования
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.Номенклатура КАК Номенклатура,
		|	ТЗ.Характеристика КАК Характеристика,
		|	ТЗ.Склад КАК Склад,
		|	ТЗ.Доступно КАК Доступно
		|Поместить 
		|	ВТ1
		|ИЗ
		|	&ТЗ КАК ТЗ;
		|
		|ВЫБРАТЬ
		|	ТЗ.Номенклатура КАК НоменклатураНовая,
		|	ТЗ.Характеристика КАК ХарактеристикаНовая,
		|	ТЗ.Склад КАК СкладНовый,
		|	ТЗ.Доступно КАК КоличествоНовое
		|
		|ИЗ
		|	ВТ1 КАК ТЗ 
		|";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции


// Формирует выборку по типовым регистрам плюс РС.мм_СрезОстатковДляВыгрузки
// для фильтрации неизменившихся позиций
//
Функция ПолучитьВыборкуСвободныхОстатковСУчетомИзменений(ТекДата, Маркетплейс) Экспорт
	
	ТЗ = ТЗДоступныхЗаглушка();    //для тестирования
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.Номенклатура КАК Номенклатура,
		|	ТЗ.Характеристика КАК Характеристика,
		|	ТЗ.Склад КАК Склад,
		|	ТЗ.Доступно КАК Доступно
		|Поместить 
		|	ВТ1
		|ИЗ
		|	&ТЗ КАК ТЗ;
		|
		|ВЫБРАТЬ
		|	ТЗ.Номенклатура 		КАК НоменклатураНовая,
		|	ТЗ.Характеристика 		КАК ХарактеристикаНовая,
		|	ТЗ.Склад 				КАК СкладНовый,
		|	ТЗ.Доступно				КАК КоличествоНовое,
		
		|	мм.КоличествоСвободное 	КАК КоличествоСтарое,
		|	мм.Номенклатура 		КАК НоменклатураСтарая,
		|	мм.Склад 				КАК СкладСтарый,
		|	мм.Характеристика 		КАК ХарактеристикаСтарая
		|
		|ИЗ
		|	ВТ1 КАК ТЗ 
		|		full join ( 
		|			ВЫБРАТЬ
		|				мм.Номенклатура,
		|				мм.Склад,
		|				мм.Характеристика,
		|				мм.КоличествоСвободное
		|			ИЗ
		|				регистрСведений.мм_СрезОстатковДляВыгрузки как мм
		|			ГДЕ
		|				мм.Период = &ТекДата
		|				И мм.Маркетплейс = &МаркетПлейс
		|		) КАК мм
		|		ПО мм.Номенклатура = ТЗ.номенклатура
		|			и мм.Склад = ТЗ.Склад
		|			и мм.Характеристика = ТЗ.Характеристика
		|";               

	Запрос.УстановитьПараметр("ТекДата", ТекДата);
	Запрос.УстановитьПараметр("МаркетПлейс", МаркетПлейс);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции


// Для тестирования. Готовит ТЗ свободных остатков номенклатуры
// В релизе надо заменить на реальный запрос
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ТЗДоступныхЗаглушка()
	
	// Заглушка 
	
	ТЗ = Новый ТаблицаЗначений;
	ТипСклады = Новый ОписаниеТипов("СправочникСсылка.Склады");
	ТЗ.Колонки.Добавить("Склад", ТипСклады);
	ТипНоменклатура = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	ТЗ.Колонки.Добавить("Номенклатура", ТипНоменклатура);
	ТипХарактеристикиНоменклатуры = Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры");
	ТЗ.Колонки.Добавить("Характеристика", ТипХарактеристикиНоменклатуры);
	ТипЧисло =  Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(20,4));
	ТЗ.Колонки.Добавить("Доступно", ТипЧисло);
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
		|	ТоварыНаСкладахОстатки.Склад КАК Склад,
		|	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК Доступно
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		новСтр = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	Возврат ТЗ;
	
КонецФункции


// Собирает активные маркетплейсы в ТЗ
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ТЗМаркетплейсов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Спр_.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.мм_Маркетплейсы КАК Спр_";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции


// Проверяет, что в РС есть строки с указанной датой - ТекДата (колонка Период)
//
// Параметры:
//	ТекДата 	- дата - дата проверки наличия записей в РС. Поле "Период".
//	МаркетПлейс	- спр ссылка мм_Маркетплейсы - отбор
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ЕстьДанныеДляВыгрузкиЗаСегодня(ТекДата, МаркетПлейс)
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТекДата", ТекДата);
	Запрос.УстановитьПараметр("МаркетПлейс", МаркетПлейс);
	Запрос.Текст = 
		"ВЫБРАТЬ 1
		|ИЗ
		|	регистрСведений.мм_СрезОстатковДляВыгрузки как мм
		|ГДЕ
		|	мм.Период = &ТекДата
		|	и мм.МаркетПлейс = &МаркетПлейс
		|";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();

КонецФункции


// Безусловно добавляет записи в регистр сведений
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура ПоместитьПервуюВыгрузкуЗаДеньВРегистрСведений(Выборка, ТекДата, Маркетплейс)
	
	НаборЗаписей = РегистрыСведений.мм_СрезОстатковДляВыгрузки.СоздатьНаборЗаписей();
	
	Пока Выборка.Следующий() Цикл 
		
		НаборЗаписей.Отбор.Маркетплейс.Установить(Маркетплейс);
		НаборЗаписей.Отбор.Период.Установить(ТекДата);
		НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.НоменклатураНовая);
		НаборЗаписей.Отбор.Склад.Установить(Выборка.СкладНовый);
		НаборЗаписей.Отбор.Характеристика.Установить(Выборка.ХарактеристикаНовая);
		
		
		НовСтр = НаборЗаписей.Добавить();
		НовСтр.Период 				= ТекДата;
		НовСтр.Маркетплейс 			= Маркетплейс;
		НовСтр.Номенклатура 		= Выборка.НоменклатураНовая;
		НовСтр.Склад 				= Выборка.СкладНовый;
		НовСтр.Характеристика 		= Выборка.ХарактеристикаНовая;
		НовСтр.КоличествоСвободное 	= Выборка.КоличествоНовое;
		
		НовСтр.Выгружать 			= Истина;
		
		НаборЗаписей.Записать();
		НаборЗаписей.Очистить();
		
	КонецЦикла;
	
	
КонецПроцедуры


// Очищает РС по измерению "Маркетплейс". Может переполнить журнал транзакций...
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура ОчиститьРегистр(МаркетПлейс)

	// это чтобы не грохнуть вообще весь регистр
	Если НЕ ЗначениеЗаполнено(МаркетПлейс) ИЛИ 
		НЕ ЗначениеЗаполнено(МаркетПлейс.ВерсияДанных) Тогда
		Возврат;
	КонецЕсли;

	НаборЗаписей = РегистрыСведений.мм_СрезОстатковДляВыгрузки.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Маркетплейс.Установить(Маркетплейс);

	НаборЗаписей.Записать();
	
КонецПроцедуры


// Проходит поверх полной выгрузки и выборочно меняет данные - количество и флаг "Выгружать"
// Также добавляет строки, если появились новые позиции в остатках
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура ПоместитьДифференциальнуюВыгрузкуЗаДеньВРегистрСведений(Выборка, ТекДата, МаркетПлейс)

	МЗ = РегистрыСведений.мм_СрезОстатковДляВыгрузки.СоздатьМенеджерЗаписи();	
	
	Пока Выборка.Следующий() Цикл 
		
		// 1. если есть новая позиция, а старой нет - выгружаем
		// 2. если есть старая позиция, а новой нет - выгружаем 0 (ноль), номенклатуру берем из старой позиции
		// (здесь баг - дальнейшие итерации всегда включают флажки Выгрузить в этом кейсе)
		// (как исправить - делать ВЫБРАТЬ из спр Номенклатура, а остатки джойнить к ней.
		// тогда запись с номенклатурой будет всегда в результате запроса,
		// и только лишь колонка остатка станет нулевой при полном выбытии товара.
		// А это попадает под кейс 3, см. ниже).
		// 3. если есть обе позиции, но кол-во поменялось - выгружаем новое кол-во
		// 4. во всех остальных случаях - не выгружаем
		Если ЗначениеЗаполнено(Выборка.НоменклатураНовая)
			И НЕ ЗначениеЗаполнено(Выборка.НоменклатураСтарая) Тогда
			
			ДобавитьЗаписьВРегистр(Выборка.НоменклатураНовая, 
				Выборка.ХарактеристикаНовая,
				Выборка.СкладНовый,
				Выборка.КоличествоНовое,
				МаркетПлейс,
				ТекДата,
				Истина);
				
		ИначеЕсли ЗначениеЗаполнено(Выборка.НоменклатураСтарая)
			И НЕ ЗначениеЗаполнено(Выборка.НоменклатураНовая) Тогда
			
			УстановитьКоличествоИФлагВыгрузки(ТекДата, Маркетплейс,
				Выборка.НоменклатураСтарая, 
				Выборка.СкладСтарый, 
				Выборка.ХарактеристикаСтарая, 
				0, 
				Истина, 
				МЗ);
			
			
		ИначеЕсли ЗначениеЗаполнено(Выборка.НоменклатураСтарая)
			И ЗначениеЗаполнено(Выборка.НоменклатураНовая) 
			И Выборка.КоличествоНовое <> Выборка.КоличествоСтарое Тогда
			
			УстановитьКоличествоИФлагВыгрузки(ТекДата, Маркетплейс,
				Выборка.НоменклатураСтарая, 
				Выборка.СкладСтарый, 
				Выборка.ХарактеристикаСтарая, 
				Выборка.КоличествоНовое, 
				Истина, 
				МЗ);
			
		Иначе
			
			УстановитьКоличествоИФлагВыгрузки(ТекДата, Маркетплейс,
				Выборка.НоменклатураСтарая, 
				Выборка.СкладСтарый, 
				Выборка.ХарактеристикаСтарая, 
				Выборка.КоличествоСтарое, 
				Ложь, 
				МЗ);
				
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры


// Добавляет запись в регистр, если в диффе появилась новая номенклатура
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура ДобавитьЗаписьВРегистр(Номенклатура, 
				Характеристика,
				Склад,
				Доступно,
				МаркетПлейс,
				ТекДата,
				Выгружать)
				
	НаборЗаписей = РегистрыСведений.мм_СрезОстатковДляВыгрузки.СоздатьНаборЗаписей();

	НаборЗаписей.Отбор.Период.Установить(ТекДата);
	НаборЗаписей.Отбор.Номенклатура.Установить(Номенклатура);
	НаборЗаписей.Отбор.Склад.Установить(Склад);
	НаборЗаписей.Отбор.Характеристика.Установить(Характеристика);
	НаборЗаписей.Отбор.Маркетплейс.Установить(Маркетплейс);
	
	НовСтр 						= НаборЗаписей.Добавить();
	НовСтр.Период 				= ТекДата;
	НовСтр.Маркетплейс 			= Маркетплейс;
	НовСтр.Номенклатура 		= Номенклатура;
	НовСтр.Склад 				= Склад;
	НовСтр.Характеристика 		= Характеристика;
	НовСтр.КоличествоСвободное 	= Доступно;
	
	НовСтр.Выгружать 			= Выгружать;
	
	НаборЗаписей.Записать();
		
КонецПроцедуры


// Меняет доступное количество и включает флаг "Выгружать"
//
// Параметры:
//	ТекДата, 
//	Маркетплейс,
//	Номенклатура, 
//	Склад, 
//	Характеристика, 
//	КоличествоДоступно, 
//	Выгружать = Ложь, 
//	МЗ - РегистрыСведений.мм_СрезОстатковДляВыгрузки.СоздатьМенеджерЗаписи() - может быть создан снаружи для ускорения
//
Процедура УстановитьКоличествоИФлагВыгрузки(ТекДата, Маркетплейс,
	Номенклатура, Склад, Характеристика, КоличествоДоступно, Выгружать = Ложь, МЗ = Неопределено)
	
	Если МЗ = Неопределено Тогда
		МЗ = РегистрыСведений.мм_СрезОстатковДляВыгрузки.СоздатьМенеджерЗаписи();
	КонецЕсли;
	
	МЗ.Период 			= ТекДата;
	МЗ.Номенклатура 	= Номенклатура;
	МЗ.Склад 			= Склад;
	МЗ.Характеристика 	= Характеристика;
	МЗ.Маркетплейс 		= Маркетплейс;
	МЗ.Прочитать();
	Если МЗ.Выбран() Тогда
		
		// для уменьшения операций записи - не переписываем одинаковые значения
		Если МЗ.КоличествоСвободное 	= КоличествоДоступно
			И МЗ.Выгружать 	= Выгружать Тогда
			Возврат;
		КонецЕсли;
		
		МЗ.КоличествоСвободное 	= КоличествоДоступно;
		МЗ.Выгружать 			= Выгружать;
		МЗ.Записать();
		
	КонецЕсли;
	
		
КонецПроцедуры


#КонецОбласти 	


#Область ВыгрузитьВМаркетплейсы


// Отправка данных на сайт


// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура ВыгрузитьВМаркетплейсы() Экспорт

	ТЗМаркетплейсов = ТЗМаркетплейсов();
	
	ТекДата = НачалоДня(ТекущаяДатаСеанса());
	
	Для каждого МаркетПлейс Из ТЗМаркетплейсов.ВыгрузитьКолонку("Ссылка") Цикл
		
		Выборка = ВыбратьВыгружаемыеПозицииИзРегистра(ТекДата, МаркетПлейс);
		
		Пока Выборка.Следующий Цикл
			
			ВыгрузитьВМаркетплейс(Выборка);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры



// Выбирает только нужные для отправки на сайт данные
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ВыбратьВыгружаемыеПозицииИзРегистра(ТекДата, МаркетПлейс)
	
		
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТекДата", ТекДата);
	Запрос.УстановитьПараметр("МаркетПлейс", МаркетПлейс);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|				мм.Номенклатура,
		|				мм.Склад,
		|				мм.Характеристика,
		|				мм.КоличествоСвободное
		|			ИЗ
		|				регистрСведений.мм_СрезОстатковДляВыгрузки как мм
		|			ГДЕ
		|				мм.Период = &ТекДата
		|				И мм.Маркетплейс = &МаркетПлейс
		|		
		|";               

	Запрос.УстановитьПараметр("ТекДата", ТекДата);
	Запрос.УстановитьПараметр("МаркетПлейс", МаркетПлейс);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;

	
КонецФункции



// Выполняет фактическую отправку данных об остатках одной позиции номенклатуры на сайт
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура ВыгрузитьВМаркетплейс(Выборка)
		
КонецПроцедуры



#КонецОбласти

